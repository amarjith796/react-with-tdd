// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <AddTodo
          handleAddTask={[Function]}
        />,
        <TodoView
          data={
            Array [
              Object {
                "status": true,
                "taskname": "C",
              },
              Object {
                "status": false,
                "taskname": "C++",
              },
              Object {
                "status": false,
                "taskname": "Java",
              },
              Object {
                "status": false,
                "taskname": "Python",
              },
              Object {
                "status": false,
                "taskname": "COBOL",
              },
            ]
          }
          handleDelete={[Function]}
          handleEditTodo={[Function]}
          handleStatus={[Function]}
        />,
      ],
      "className": "App-header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "handleAddTask": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "data": Array [
            Object {
              "status": true,
              "taskname": "C",
            },
            Object {
              "status": false,
              "taskname": "C++",
            },
            Object {
              "status": false,
              "taskname": "Java",
            },
            Object {
              "status": false,
              "taskname": "Python",
            },
            Object {
              "status": false,
              "taskname": "COBOL",
            },
          ],
          "handleDelete": [Function],
          "handleEditTodo": [Function],
          "handleStatus": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <AddTodo
            handleAddTask={[Function]}
          />,
          <TodoView
            data={
              Array [
                Object {
                  "status": true,
                  "taskname": "C",
                },
                Object {
                  "status": false,
                  "taskname": "C++",
                },
                Object {
                  "status": false,
                  "taskname": "Java",
                },
                Object {
                  "status": false,
                  "taskname": "Python",
                },
                Object {
                  "status": false,
                  "taskname": "COBOL",
                },
              ]
            }
            handleDelete={[Function]}
            handleEditTodo={[Function]}
            handleStatus={[Function]}
          />,
        ],
        "className": "App-header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleAddTask": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "data": Array [
              Object {
                "status": true,
                "taskname": "C",
              },
              Object {
                "status": false,
                "taskname": "C++",
              },
              Object {
                "status": false,
                "taskname": "Java",
              },
              Object {
                "status": false,
                "taskname": "Python",
              },
              Object {
                "status": false,
                "taskname": "COBOL",
              },
            ],
            "handleDelete": [Function],
            "handleEditTodo": [Function],
            "handleStatus": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
