// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TodoView should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TodoView
    data={Array []}
    handleDelete={[MockFunction]}
    handleDeleteSelected={[MockFunction]}
    handleEditTodo={[MockFunction]}
    handleStatus={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2
          style={
            Object {
              "textAlign": "center",
            }
          }
        >
          TODO TASK 
        </h2>,
        <button
          onClick={[Function]}
        >
          Delete Selected
        </button>,
        " ",
        <button>
          DeleteAll
        </button>,
        Array [],
      ],
      "style": Object {
        "background": "darkslategray",
        "minHeight": "600px",
        "width": "60vw",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "TODO TASK ",
          "style": Object {
            "textAlign": "center",
          },
        },
        "ref": null,
        "rendered": "TODO TASK ",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Delete Selected",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Delete Selected",
        "type": "button",
      },
      " ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "DeleteAll",
          "onClick": undefined,
        },
        "ref": null,
        "rendered": "DeleteAll",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            TODO TASK 
          </h2>,
          <button
            onClick={[Function]}
          >
            Delete Selected
          </button>,
          " ",
          <button>
            DeleteAll
          </button>,
          Array [],
        ],
        "style": Object {
          "background": "darkslategray",
          "minHeight": "600px",
          "width": "60vw",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "TODO TASK ",
            "style": Object {
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": "TODO TASK ",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Delete Selected",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Delete Selected",
          "type": "button",
        },
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "DeleteAll",
            "onClick": undefined,
          },
          "ref": null,
          "rendered": "DeleteAll",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
